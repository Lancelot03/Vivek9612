{"dependencies":[{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":70},"end":{"line":2,"column":44,"index":114}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[0], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[1], \"expo-constants\");\n  var Constants = _interopNamespace(_expoConstants);\n  const EXPO_PUBLIC_BACKEND_URL = Constants.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL;\n  class AuthService {\n    token = null;\n    user = null;\n    constructor() {}\n    static getInstance() {\n      if (!AuthService.instance) {\n        AuthService.instance = new AuthService();\n      }\n      return AuthService.instance;\n    }\n    async login(credentials) {\n      try {\n        const response = await fetch(`${EXPO_PUBLIC_BACKEND_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(credentials)\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.detail || 'Login failed');\n        }\n        const authData = await response.json();\n\n        // Store token and user data\n        await this.storeAuthData(authData);\n        return authData;\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      }\n    }\n    async changePassword(passwordData) {\n      try {\n        const response = await fetch(`${EXPO_PUBLIC_BACKEND_URL}/api/auth/change-password`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(passwordData)\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.detail || 'Password change failed');\n        }\n      } catch (error) {\n        console.error('Password change error:', error);\n        throw error;\n      }\n    }\n    async setOfficeType(employeeCode, officeType) {\n      try {\n        const response = await fetch(`${EXPO_PUBLIC_BACKEND_URL}/api/auth/set-office-type`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            employeeCode,\n            officeType\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.detail || 'Failed to set office type');\n        }\n      } catch (error) {\n        console.error('Set office type error:', error);\n        throw error;\n      }\n    }\n    async getCurrentUser() {\n      try {\n        const token = await this.getToken();\n        if (!token) {\n          return null;\n        }\n        const response = await fetch(`${EXPO_PUBLIC_BACKEND_URL}/api/auth/me`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          // Token might be invalid, clear stored data\n          await this.logout();\n          return null;\n        }\n        const userData = await response.json();\n        this.user = userData;\n        await AsyncStorage.default.setItem('user', JSON.stringify(userData));\n        return userData;\n      } catch (error) {\n        console.error('Get current user error:', error);\n        return null;\n      }\n    }\n    async logout() {\n      try {\n        const token = await this.getToken();\n        if (token) {\n          // Notify server about logout\n          await fetch(`${EXPO_PUBLIC_BACKEND_URL}/api/auth/logout`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Clear local storage regardless of server response\n        await this.clearAuthData();\n      }\n    }\n    async getToken() {\n      if (this.token) {\n        return this.token;\n      }\n      try {\n        this.token = await AsyncStorage.default.getItem('auth_token');\n        return this.token;\n      } catch (error) {\n        console.error('Get token error:', error);\n        return null;\n      }\n    }\n    async getUser() {\n      if (this.user) {\n        return this.user;\n      }\n      try {\n        const userString = await AsyncStorage.default.getItem('user');\n        if (userString) {\n          this.user = JSON.parse(userString);\n          return this.user;\n        }\n      } catch (error) {\n        console.error('Get user error:', error);\n      }\n      return null;\n    }\n    async isAuthenticated() {\n      const token = await this.getToken();\n      const user = await this.getUser();\n      return !!(token && user);\n    }\n    async hasPermission(permission) {\n      const user = await this.getUser();\n      return user?.permissions.includes(permission) || false;\n    }\n    async isAdmin() {\n      const user = await this.getUser();\n      return user?.role === 'admin';\n    }\n    async isFirstLogin() {\n      const user = await this.getUser();\n      return user?.isFirstLogin || false;\n    }\n    async mustChangePassword() {\n      const user = await this.getUser();\n      return user?.mustChangePassword || false;\n    }\n    async storeAuthData(authData) {\n      try {\n        await AsyncStorage.default.setItem('auth_token', authData.access_token);\n        await AsyncStorage.default.setItem('user', JSON.stringify(authData.user));\n        this.token = authData.access_token;\n        this.user = authData.user;\n      } catch (error) {\n        console.error('Store auth data error:', error);\n        throw new Error('Failed to store authentication data');\n      }\n    }\n    async clearAuthData() {\n      try {\n        await AsyncStorage.default.multiRemove(['auth_token', 'user']);\n        this.token = null;\n        this.user = null;\n      } catch (error) {\n        console.error('Clear auth data error:', error);\n      }\n    }\n    async getAuthHeaders() {\n      const token = await this.getToken();\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n      }\n      return headers;\n    }\n    async makeAuthenticatedRequest(url, options = {}) {\n      const headers = await this.getAuthHeaders();\n      const response = await fetch(url, {\n        ...options,\n        headers: {\n          ...headers,\n          ...options.headers\n        }\n      });\n\n      // If unauthorized, clear auth data and redirect to login\n      if (response.status === 401) {\n        await this.logout();\n        throw new Error('Authentication required');\n      }\n      return response;\n    }\n  }\n  var _default = AuthService;\n});","lineCount":251,"map":[[27,2,290,0,"Object"],[27,8,290,0],[27,9,290,0,"defineProperty"],[27,23,290,0],[27,24,290,0,"exports"],[27,31,290,0],[28,4,290,0,"enumerable"],[28,14,290,0],[29,4,290,0,"get"],[29,7,290,0],[29,18,290,0,"get"],[29,19,290,0],[30,6,290,0],[30,13,290,0,"_default"],[30,21,290,0],[31,4,290,0],[32,2,290,0],[33,2,1,0],[33,6,1,0,"_reactNativeAsyncStorageAsyncStorage"],[33,42,1,0],[33,45,1,0,"require"],[33,52,1,0],[33,53,1,0,"_dependencyMap"],[33,67,1,0],[34,2,1,0],[34,6,1,0,"AsyncStorage"],[34,18,1,0],[34,21,1,0,"_interopDefault"],[34,36,1,0],[34,37,1,0,"_reactNativeAsyncStorageAsyncStorage"],[34,73,1,0],[35,2,2,0],[35,6,2,0,"_expoConstants"],[35,20,2,0],[35,23,2,0,"require"],[35,30,2,0],[35,31,2,0,"_dependencyMap"],[35,45,2,0],[36,2,2,0],[36,6,2,0,"Constants"],[36,15,2,0],[36,18,2,0,"_interopNamespace"],[36,35,2,0],[36,36,2,0,"_expoConstants"],[36,50,2,0],[37,2,4,0],[37,8,4,6,"EXPO_PUBLIC_BACKEND_URL"],[37,31,4,29],[37,34,4,32,"Constants"],[37,43,4,41],[37,44,4,42,"expoConfig"],[37,54,4,52],[37,56,4,54,"extra"],[37,61,4,59],[37,63,4,61,"EXPO_PUBLIC_BACKEND_URL"],[37,86,4,84],[37,90,4,88,"process"],[37,97,4,95],[37,98,4,96,"env"],[37,101,4,99],[37,102,4,100,"EXPO_PUBLIC_BACKEND_URL"],[37,125,4,123],[38,2,36,0],[38,8,36,6,"AuthService"],[38,19,36,17],[38,20,36,18],[39,4,38,10,"token"],[39,9,38,15],[39,12,38,33],[39,16,38,37],[40,4,39,10,"user"],[40,8,39,14],[40,11,39,30],[40,15,39,34],[41,4,41,10,"constructor"],[41,15,41,21,"constructor"],[41,16,41,21],[41,18,41,24],[41,19,41,25],[42,4,43,2],[42,11,43,16,"getInstance"],[42,22,43,27,"getInstance"],[42,23,43,27],[42,25,43,43],[43,6,44,4],[43,10,44,8],[43,11,44,9,"AuthService"],[43,22,44,20],[43,23,44,21,"instance"],[43,31,44,29],[43,33,44,31],[44,8,45,6,"AuthService"],[44,19,45,17],[44,20,45,18,"instance"],[44,28,45,26],[44,31,45,29],[44,35,45,33,"AuthService"],[44,46,45,44],[44,47,45,45],[44,48,45,46],[45,6,46,4],[46,6,47,4],[46,13,47,11,"AuthService"],[46,24,47,22],[46,25,47,23,"instance"],[46,33,47,31],[47,4,48,2],[48,4,50,2],[48,10,50,8,"login"],[48,15,50,13,"login"],[48,16,50,14,"credentials"],[48,27,50,43],[48,29,50,68],[49,6,51,4],[49,10,51,8],[50,8,52,6],[50,14,52,12,"response"],[50,22,52,20],[50,25,52,23],[50,31,52,29,"fetch"],[50,36,52,34],[50,37,52,35],[50,40,52,38,"EXPO_PUBLIC_BACKEND_URL"],[50,63,52,61],[50,80,52,78],[50,82,52,80],[51,10,53,8,"method"],[51,16,53,14],[51,18,53,16],[51,24,53,22],[52,10,54,8,"headers"],[52,17,54,15],[52,19,54,17],[53,12,55,10],[53,26,55,24],[53,28,55,26],[54,10,56,8],[54,11,56,9],[55,10,57,8,"body"],[55,14,57,12],[55,16,57,14,"JSON"],[55,20,57,18],[55,21,57,19,"stringify"],[55,30,57,28],[55,31,57,29,"credentials"],[55,42,57,40],[56,8,58,6],[56,9,58,7],[56,10,58,8],[57,8,60,6],[57,12,60,10],[57,13,60,11,"response"],[57,21,60,19],[57,22,60,20,"ok"],[57,24,60,22],[57,26,60,24],[58,10,61,8],[58,16,61,14,"errorData"],[58,25,61,23],[58,28,61,26],[58,34,61,32,"response"],[58,42,61,40],[58,43,61,41,"json"],[58,47,61,45],[58,48,61,46],[58,49,61,47],[59,10,62,8],[59,16,62,14],[59,20,62,18,"Error"],[59,25,62,23],[59,26,62,24,"errorData"],[59,35,62,33],[59,36,62,34,"detail"],[59,42,62,40],[59,46,62,44],[59,60,62,58],[59,61,62,59],[60,8,63,6],[61,8,65,6],[61,14,65,12,"authData"],[61,22,65,34],[61,25,65,37],[61,31,65,43,"response"],[61,39,65,51],[61,40,65,52,"json"],[61,44,65,56],[61,45,65,57],[61,46,65,58],[63,8,67,6],[64,8,68,6],[64,14,68,12],[64,18,68,16],[64,19,68,17,"storeAuthData"],[64,32,68,30],[64,33,68,31,"authData"],[64,41,68,39],[64,42,68,40],[65,8,70,6],[65,15,70,13,"authData"],[65,23,70,21],[66,6,71,4],[66,7,71,5],[66,8,71,6],[66,15,71,13,"error"],[66,20,71,18],[66,22,71,20],[67,8,72,6,"console"],[67,15,72,13],[67,16,72,14,"error"],[67,21,72,19],[67,22,72,20],[67,36,72,34],[67,38,72,36,"error"],[67,43,72,41],[67,44,72,42],[68,8,73,6],[68,14,73,12,"error"],[68,19,73,17],[69,6,74,4],[70,4,75,2],[71,4,77,2],[71,10,77,8,"changePassword"],[71,24,77,22,"changePassword"],[71,25,77,23,"passwordData"],[71,37,77,55],[71,39,77,72],[72,6,78,4],[72,10,78,8],[73,8,79,6],[73,14,79,12,"response"],[73,22,79,20],[73,25,79,23],[73,31,79,29,"fetch"],[73,36,79,34],[73,37,79,35],[73,40,79,38,"EXPO_PUBLIC_BACKEND_URL"],[73,63,79,61],[73,90,79,88],[73,92,79,90],[74,10,80,8,"method"],[74,16,80,14],[74,18,80,16],[74,24,80,22],[75,10,81,8,"headers"],[75,17,81,15],[75,19,81,17],[76,12,82,10],[76,26,82,24],[76,28,82,26],[77,10,83,8],[77,11,83,9],[78,10,84,8,"body"],[78,14,84,12],[78,16,84,14,"JSON"],[78,20,84,18],[78,21,84,19,"stringify"],[78,30,84,28],[78,31,84,29,"passwordData"],[78,43,84,41],[79,8,85,6],[79,9,85,7],[79,10,85,8],[80,8,87,6],[80,12,87,10],[80,13,87,11,"response"],[80,21,87,19],[80,22,87,20,"ok"],[80,24,87,22],[80,26,87,24],[81,10,88,8],[81,16,88,14,"errorData"],[81,25,88,23],[81,28,88,26],[81,34,88,32,"response"],[81,42,88,40],[81,43,88,41,"json"],[81,47,88,45],[81,48,88,46],[81,49,88,47],[82,10,89,8],[82,16,89,14],[82,20,89,18,"Error"],[82,25,89,23],[82,26,89,24,"errorData"],[82,35,89,33],[82,36,89,34,"detail"],[82,42,89,40],[82,46,89,44],[82,70,89,68],[82,71,89,69],[83,8,90,6],[84,6,91,4],[84,7,91,5],[84,8,91,6],[84,15,91,13,"error"],[84,20,91,18],[84,22,91,20],[85,8,92,6,"console"],[85,15,92,13],[85,16,92,14,"error"],[85,21,92,19],[85,22,92,20],[85,46,92,44],[85,48,92,46,"error"],[85,53,92,51],[85,54,92,52],[86,8,93,6],[86,14,93,12,"error"],[86,19,93,17],[87,6,94,4],[88,4,95,2],[89,4,97,2],[89,10,97,8,"setOfficeType"],[89,23,97,21,"setOfficeType"],[89,24,97,22,"employeeCode"],[89,36,97,42],[89,38,97,44,"officeType"],[89,48,97,62],[89,50,97,79],[90,6,98,4],[90,10,98,8],[91,8,99,6],[91,14,99,12,"response"],[91,22,99,20],[91,25,99,23],[91,31,99,29,"fetch"],[91,36,99,34],[91,37,99,35],[91,40,99,38,"EXPO_PUBLIC_BACKEND_URL"],[91,63,99,61],[91,90,99,88],[91,92,99,90],[92,10,100,8,"method"],[92,16,100,14],[92,18,100,16],[92,24,100,22],[93,10,101,8,"headers"],[93,17,101,15],[93,19,101,17],[94,12,102,10],[94,26,102,24],[94,28,102,26],[95,10,103,8],[95,11,103,9],[96,10,104,8,"body"],[96,14,104,12],[96,16,104,14,"JSON"],[96,20,104,18],[96,21,104,19,"stringify"],[96,30,104,28],[96,31,104,29],[97,12,105,10,"employeeCode"],[97,24,105,22],[98,12,106,10,"officeType"],[99,10,107,8],[99,11,107,9],[100,8,108,6],[100,9,108,7],[100,10,108,8],[101,8,110,6],[101,12,110,10],[101,13,110,11,"response"],[101,21,110,19],[101,22,110,20,"ok"],[101,24,110,22],[101,26,110,24],[102,10,111,8],[102,16,111,14,"errorData"],[102,25,111,23],[102,28,111,26],[102,34,111,32,"response"],[102,42,111,40],[102,43,111,41,"json"],[102,47,111,45],[102,48,111,46],[102,49,111,47],[103,10,112,8],[103,16,112,14],[103,20,112,18,"Error"],[103,25,112,23],[103,26,112,24,"errorData"],[103,35,112,33],[103,36,112,34,"detail"],[103,42,112,40],[103,46,112,44],[103,73,112,71],[103,74,112,72],[104,8,113,6],[105,6,114,4],[105,7,114,5],[105,8,114,6],[105,15,114,13,"error"],[105,20,114,18],[105,22,114,20],[106,8,115,6,"console"],[106,15,115,13],[106,16,115,14,"error"],[106,21,115,19],[106,22,115,20],[106,46,115,44],[106,48,115,46,"error"],[106,53,115,51],[106,54,115,52],[107,8,116,6],[107,14,116,12,"error"],[107,19,116,17],[108,6,117,4],[109,4,118,2],[110,4,120,2],[110,10,120,8,"getCurrentUser"],[110,24,120,22,"getCurrentUser"],[110,25,120,22],[110,27,120,47],[111,6,121,4],[111,10,121,8],[112,8,122,6],[112,14,122,12,"token"],[112,19,122,17],[112,22,122,20],[112,28,122,26],[112,32,122,30],[112,33,122,31,"getToken"],[112,41,122,39],[112,42,122,40],[112,43,122,41],[113,8,123,6],[113,12,123,10],[113,13,123,11,"token"],[113,18,123,16],[113,20,123,18],[114,10,124,8],[114,17,124,15],[114,21,124,19],[115,8,125,6],[116,8,127,6],[116,14,127,12,"response"],[116,22,127,20],[116,25,127,23],[116,31,127,29,"fetch"],[116,36,127,34],[116,37,127,35],[116,40,127,38,"EXPO_PUBLIC_BACKEND_URL"],[116,63,127,61],[116,77,127,75],[116,79,127,77],[117,10,128,8,"headers"],[117,17,128,15],[117,19,128,17],[118,12,129,10],[118,27,129,25],[118,29,129,27],[118,39,129,37,"token"],[118,44,129,42],[119,10,130,8],[120,8,131,6],[120,9,131,7],[120,10,131,8],[121,8,133,6],[121,12,133,10],[121,13,133,11,"response"],[121,21,133,19],[121,22,133,20,"ok"],[121,24,133,22],[121,26,133,24],[122,10,134,8],[123,10,135,8],[123,16,135,14],[123,20,135,18],[123,21,135,19,"logout"],[123,27,135,25],[123,28,135,26],[123,29,135,27],[124,10,136,8],[124,17,136,15],[124,21,136,19],[125,8,137,6],[126,8,139,6],[126,14,139,12,"userData"],[126,22,139,26],[126,25,139,29],[126,31,139,35,"response"],[126,39,139,43],[126,40,139,44,"json"],[126,44,139,48],[126,45,139,49],[126,46,139,50],[127,8,140,6],[127,12,140,10],[127,13,140,11,"user"],[127,17,140,15],[127,20,140,18,"userData"],[127,28,140,26],[128,8,141,6],[128,14,141,12,"AsyncStorage"],[128,26,141,24],[128,27,141,24,"default"],[128,34,141,24],[128,35,141,25,"setItem"],[128,42,141,32],[128,43,141,33],[128,49,141,39],[128,51,141,41,"JSON"],[128,55,141,45],[128,56,141,46,"stringify"],[128,65,141,55],[128,66,141,56,"userData"],[128,74,141,64],[128,75,141,65],[128,76,141,66],[129,8,143,6],[129,15,143,13,"userData"],[129,23,143,21],[130,6,144,4],[130,7,144,5],[130,8,144,6],[130,15,144,13,"error"],[130,20,144,18],[130,22,144,20],[131,8,145,6,"console"],[131,15,145,13],[131,16,145,14,"error"],[131,21,145,19],[131,22,145,20],[131,47,145,45],[131,49,145,47,"error"],[131,54,145,52],[131,55,145,53],[132,8,146,6],[132,15,146,13],[132,19,146,17],[133,6,147,4],[134,4,148,2],[135,4,150,2],[135,10,150,8,"logout"],[135,16,150,14,"logout"],[135,17,150,14],[135,19,150,32],[136,6,151,4],[136,10,151,8],[137,8,152,6],[137,14,152,12,"token"],[137,19,152,17],[137,22,152,20],[137,28,152,26],[137,32,152,30],[137,33,152,31,"getToken"],[137,41,152,39],[137,42,152,40],[137,43,152,41],[138,8,154,6],[138,12,154,10,"token"],[138,17,154,15],[138,19,154,17],[139,10,155,8],[140,10,156,8],[140,16,156,14,"fetch"],[140,21,156,19],[140,22,156,20],[140,25,156,23,"EXPO_PUBLIC_BACKEND_URL"],[140,48,156,46],[140,66,156,64],[140,68,156,66],[141,12,157,10,"method"],[141,18,157,16],[141,20,157,18],[141,26,157,24],[142,12,158,10,"headers"],[142,19,158,17],[142,21,158,19],[143,14,159,12],[143,29,159,27],[143,31,159,29],[143,41,159,39,"token"],[143,46,159,44],[144,12,160,10],[145,10,161,8],[145,11,161,9],[145,12,161,10],[146,8,162,6],[147,6,163,4],[147,7,163,5],[147,8,163,6],[147,15,163,13,"error"],[147,20,163,18],[147,22,163,20],[148,8,164,6,"console"],[148,15,164,13],[148,16,164,14,"error"],[148,21,164,19],[148,22,164,20],[148,37,164,35],[148,39,164,37,"error"],[148,44,164,42],[148,45,164,43],[149,6,165,4],[149,7,165,5],[149,16,165,14],[150,8,166,6],[151,8,167,6],[151,14,167,12],[151,18,167,16],[151,19,167,17,"clearAuthData"],[151,32,167,30],[151,33,167,31],[151,34,167,32],[152,6,168,4],[153,4,169,2],[154,4,171,2],[154,10,171,8,"getToken"],[154,18,171,16,"getToken"],[154,19,171,16],[154,21,171,43],[155,6,172,4],[155,10,172,8],[155,14,172,12],[155,15,172,13,"token"],[155,20,172,18],[155,22,172,20],[156,8,173,6],[156,15,173,13],[156,19,173,17],[156,20,173,18,"token"],[156,25,173,23],[157,6,174,4],[158,6,176,4],[158,10,176,8],[159,8,177,6],[159,12,177,10],[159,13,177,11,"token"],[159,18,177,16],[159,21,177,19],[159,27,177,25,"AsyncStorage"],[159,39,177,37],[159,40,177,37,"default"],[159,47,177,37],[159,48,177,38,"getItem"],[159,55,177,45],[159,56,177,46],[159,68,177,58],[159,69,177,59],[160,8,178,6],[160,15,178,13],[160,19,178,17],[160,20,178,18,"token"],[160,25,178,23],[161,6,179,4],[161,7,179,5],[161,8,179,6],[161,15,179,13,"error"],[161,20,179,18],[161,22,179,20],[162,8,180,6,"console"],[162,15,180,13],[162,16,180,14,"error"],[162,21,180,19],[162,22,180,20],[162,40,180,38],[162,42,180,40,"error"],[162,47,180,45],[162,48,180,46],[163,8,181,6],[163,15,181,13],[163,19,181,17],[164,6,182,4],[165,4,183,2],[166,4,185,2],[166,10,185,8,"getUser"],[166,17,185,15,"getUser"],[166,18,185,15],[166,20,185,40],[167,6,186,4],[167,10,186,8],[167,14,186,12],[167,15,186,13,"user"],[167,19,186,17],[167,21,186,19],[168,8,187,6],[168,15,187,13],[168,19,187,17],[168,20,187,18,"user"],[168,24,187,22],[169,6,188,4],[170,6,190,4],[170,10,190,8],[171,8,191,6],[171,14,191,12,"userString"],[171,24,191,22],[171,27,191,25],[171,33,191,31,"AsyncStorage"],[171,45,191,43],[171,46,191,43,"default"],[171,53,191,43],[171,54,191,44,"getItem"],[171,61,191,51],[171,62,191,52],[171,68,191,58],[171,69,191,59],[172,8,192,6],[172,12,192,10,"userString"],[172,22,192,20],[172,24,192,22],[173,10,193,8],[173,14,193,12],[173,15,193,13,"user"],[173,19,193,17],[173,22,193,20,"JSON"],[173,26,193,24],[173,27,193,25,"parse"],[173,32,193,30],[173,33,193,31,"userString"],[173,43,193,41],[173,44,193,42],[174,10,194,8],[174,17,194,15],[174,21,194,19],[174,22,194,20,"user"],[174,26,194,24],[175,8,195,6],[176,6,196,4],[176,7,196,5],[176,8,196,6],[176,15,196,13,"error"],[176,20,196,18],[176,22,196,20],[177,8,197,6,"console"],[177,15,197,13],[177,16,197,14,"error"],[177,21,197,19],[177,22,197,20],[177,39,197,37],[177,41,197,39,"error"],[177,46,197,44],[177,47,197,45],[178,6,198,4],[179,6,200,4],[179,13,200,11],[179,17,200,15],[180,4,201,2],[181,4,203,2],[181,10,203,8,"isAuthenticated"],[181,25,203,23,"isAuthenticated"],[181,26,203,23],[181,28,203,44],[182,6,204,4],[182,12,204,10,"token"],[182,17,204,15],[182,20,204,18],[182,26,204,24],[182,30,204,28],[182,31,204,29,"getToken"],[182,39,204,37],[182,40,204,38],[182,41,204,39],[183,6,205,4],[183,12,205,10,"user"],[183,16,205,14],[183,19,205,17],[183,25,205,23],[183,29,205,27],[183,30,205,28,"getUser"],[183,37,205,35],[183,38,205,36],[183,39,205,37],[184,6,206,4],[184,13,206,11],[184,14,206,12],[184,16,206,14,"token"],[184,21,206,19],[184,25,206,23,"user"],[184,29,206,27],[184,30,206,28],[185,4,207,2],[186,4,209,2],[186,10,209,8,"hasPermission"],[186,23,209,21,"hasPermission"],[186,24,209,22,"permission"],[186,34,209,40],[186,36,209,60],[187,6,210,4],[187,12,210,10,"user"],[187,16,210,14],[187,19,210,17],[187,25,210,23],[187,29,210,27],[187,30,210,28,"getUser"],[187,37,210,35],[187,38,210,36],[187,39,210,37],[188,6,211,4],[188,13,211,11,"user"],[188,17,211,15],[188,19,211,17,"permissions"],[188,30,211,28],[188,31,211,29,"includes"],[188,39,211,37],[188,40,211,38,"permission"],[188,50,211,48],[188,51,211,49],[188,55,211,53],[188,60,211,58],[189,4,212,2],[190,4,214,2],[190,10,214,8,"isAdmin"],[190,17,214,15,"isAdmin"],[190,18,214,15],[190,20,214,36],[191,6,215,4],[191,12,215,10,"user"],[191,16,215,14],[191,19,215,17],[191,25,215,23],[191,29,215,27],[191,30,215,28,"getUser"],[191,37,215,35],[191,38,215,36],[191,39,215,37],[192,6,216,4],[192,13,216,11,"user"],[192,17,216,15],[192,19,216,17,"role"],[192,23,216,21],[192,28,216,26],[192,35,216,33],[193,4,217,2],[194,4,219,2],[194,10,219,8,"isFirstLogin"],[194,22,219,20,"isFirstLogin"],[194,23,219,20],[194,25,219,41],[195,6,220,4],[195,12,220,10,"user"],[195,16,220,14],[195,19,220,17],[195,25,220,23],[195,29,220,27],[195,30,220,28,"getUser"],[195,37,220,35],[195,38,220,36],[195,39,220,37],[196,6,221,4],[196,13,221,11,"user"],[196,17,221,15],[196,19,221,17,"isFirstLogin"],[196,31,221,29],[196,35,221,33],[196,40,221,38],[197,4,222,2],[198,4,224,2],[198,10,224,8,"mustChangePassword"],[198,28,224,26,"mustChangePassword"],[198,29,224,26],[198,31,224,47],[199,6,225,4],[199,12,225,10,"user"],[199,16,225,14],[199,19,225,17],[199,25,225,23],[199,29,225,27],[199,30,225,28,"getUser"],[199,37,225,35],[199,38,225,36],[199,39,225,37],[200,6,226,4],[200,13,226,11,"user"],[200,17,226,15],[200,19,226,17,"mustChangePassword"],[200,37,226,35],[200,41,226,39],[200,46,226,44],[201,4,227,2],[202,4,229,2],[202,10,229,16,"storeAuthData"],[202,23,229,29,"storeAuthData"],[202,24,229,30,"authData"],[202,32,229,52],[202,34,229,69],[203,6,230,4],[203,10,230,8],[204,8,231,6],[204,14,231,12,"AsyncStorage"],[204,26,231,24],[204,27,231,24,"default"],[204,34,231,24],[204,35,231,25,"setItem"],[204,42,231,32],[204,43,231,33],[204,55,231,45],[204,57,231,47,"authData"],[204,65,231,55],[204,66,231,56,"access_token"],[204,78,231,68],[204,79,231,69],[205,8,232,6],[205,14,232,12,"AsyncStorage"],[205,26,232,24],[205,27,232,24,"default"],[205,34,232,24],[205,35,232,25,"setItem"],[205,42,232,32],[205,43,232,33],[205,49,232,39],[205,51,232,41,"JSON"],[205,55,232,45],[205,56,232,46,"stringify"],[205,65,232,55],[205,66,232,56,"authData"],[205,74,232,64],[205,75,232,65,"user"],[205,79,232,69],[205,80,232,70],[205,81,232,71],[206,8,234,6],[206,12,234,10],[206,13,234,11,"token"],[206,18,234,16],[206,21,234,19,"authData"],[206,29,234,27],[206,30,234,28,"access_token"],[206,42,234,40],[207,8,235,6],[207,12,235,10],[207,13,235,11,"user"],[207,17,235,15],[207,20,235,18,"authData"],[207,28,235,26],[207,29,235,27,"user"],[207,33,235,31],[208,6,236,4],[208,7,236,5],[208,8,236,6],[208,15,236,13,"error"],[208,20,236,18],[208,22,236,20],[209,8,237,6,"console"],[209,15,237,13],[209,16,237,14,"error"],[209,21,237,19],[209,22,237,20],[209,46,237,44],[209,48,237,46,"error"],[209,53,237,51],[209,54,237,52],[210,8,238,6],[210,14,238,12],[210,18,238,16,"Error"],[210,23,238,21],[210,24,238,22],[210,61,238,59],[210,62,238,60],[211,6,239,4],[212,4,240,2],[213,4,242,2],[213,10,242,16,"clearAuthData"],[213,23,242,29,"clearAuthData"],[213,24,242,29],[213,26,242,47],[214,6,243,4],[214,10,243,8],[215,8,244,6],[215,14,244,12,"AsyncStorage"],[215,26,244,24],[215,27,244,24,"default"],[215,34,244,24],[215,35,244,25,"multiRemove"],[215,46,244,36],[215,47,244,37],[215,48,244,38],[215,60,244,50],[215,62,244,52],[215,68,244,58],[215,69,244,59],[215,70,244,60],[216,8,245,6],[216,12,245,10],[216,13,245,11,"token"],[216,18,245,16],[216,21,245,19],[216,25,245,23],[217,8,246,6],[217,12,246,10],[217,13,246,11,"user"],[217,17,246,15],[217,20,246,18],[217,24,246,22],[218,6,247,4],[218,7,247,5],[218,8,247,6],[218,15,247,13,"error"],[218,20,247,18],[218,22,247,20],[219,8,248,6,"console"],[219,15,248,13],[219,16,248,14,"error"],[219,21,248,19],[219,22,248,20],[219,46,248,44],[219,48,248,46,"error"],[219,53,248,51],[219,54,248,52],[220,6,249,4],[221,4,250,2],[222,4,252,2],[222,10,252,8,"getAuthHeaders"],[222,24,252,22,"getAuthHeaders"],[222,25,252,22],[222,27,252,58],[223,6,253,4],[223,12,253,10,"token"],[223,17,253,15],[223,20,253,18],[223,26,253,24],[223,30,253,28],[223,31,253,29,"getToken"],[223,39,253,37],[223,40,253,38],[223,41,253,39],[224,6,255,4],[224,12,255,10,"headers"],[224,19,255,41],[224,22,255,44],[225,8,256,6],[225,22,256,20],[225,24,256,22],[226,6,257,4],[226,7,257,5],[227,6,259,4],[227,10,259,8,"token"],[227,15,259,13],[227,17,259,15],[228,8,260,6,"headers"],[228,15,260,13],[228,16,260,14],[228,31,260,29],[228,32,260,30],[228,35,260,33],[228,45,260,43,"token"],[228,50,260,48],[228,52,260,50],[229,6,261,4],[230,6,263,4],[230,13,263,11,"headers"],[230,20,263,18],[231,4,264,2],[232,4,266,2],[232,10,266,8,"makeAuthenticatedRequest"],[232,34,266,32,"makeAuthenticatedRequest"],[232,35,267,4,"url"],[232,38,267,15],[232,40,268,4,"options"],[232,47,268,24],[232,50,268,27],[232,51,268,28],[232,52,268,29],[232,54,269,23],[233,6,270,4],[233,12,270,10,"headers"],[233,19,270,17],[233,22,270,20],[233,28,270,26],[233,32,270,30],[233,33,270,31,"getAuthHeaders"],[233,47,270,45],[233,48,270,46],[233,49,270,47],[234,6,272,4],[234,12,272,10,"response"],[234,20,272,18],[234,23,272,21],[234,29,272,27,"fetch"],[234,34,272,32],[234,35,272,33,"url"],[234,38,272,36],[234,40,272,38],[235,8,273,6],[235,11,273,9,"options"],[235,18,273,16],[236,8,274,6,"headers"],[236,15,274,13],[236,17,274,15],[237,10,275,8],[237,13,275,11,"headers"],[237,20,275,18],[238,10,276,8],[238,13,276,11,"options"],[238,20,276,18],[238,21,276,19,"headers"],[239,8,277,6],[240,6,278,4],[240,7,278,5],[240,8,278,6],[242,6,280,4],[243,6,281,4],[243,10,281,8,"response"],[243,18,281,16],[243,19,281,17,"status"],[243,25,281,23],[243,30,281,28],[243,33,281,31],[243,35,281,33],[244,8,282,6],[244,14,282,12],[244,18,282,16],[244,19,282,17,"logout"],[244,25,282,23],[244,26,282,24],[244,27,282,25],[245,8,283,6],[245,14,283,12],[245,18,283,16,"Error"],[245,23,283,21],[245,24,283,22],[245,49,283,47],[245,50,283,48],[246,6,284,4],[247,6,286,4],[247,13,286,11,"response"],[247,21,286,19],[248,4,287,2],[249,2,288,0],[250,2,290,0],[250,6,290,0,"_default"],[250,14,290,0],[250,17,290,15,"AuthService"],[250,28,290,26],[251,0,290,27],[251,3]],"functionMap":{"names":["<global>","AuthService","constructor","getInstance","login","changePassword","setOfficeType","getCurrentUser","logout","getToken","getUser","isAuthenticated","hasPermission","isAdmin","isFirstLogin","mustChangePassword","storeAuthData","clearAuthData","getAuthHeaders","makeAuthenticatedRequest"],"mappings":"AAA;ACmC;ECK,wBD;EEE;GFK;EGE;GHyB;EIE;GJkB;EKE;GLqB;EME;GN4B;EOE;GPmB;EQE;GRY;ESE;GTgB;EUE;GVI;EWE;GXG;EYE;GZG;EaE;GbG;EcE;GdG;EeE;GfW;EgBE;GhBQ;EiBE;GjBY;EkBE;GlBqB;CDC"},"hasCjsExports":false},"type":"js/module"}]}